{"version":3,"sources":["../../src/services/FileUploader.js"],"names":["MAX_FILE_SIZE_MB","MAX_FILE_SIZE_BYTES","upload","limits","fileSize","files","uploader","req","res","next","any","err","code","status","json","message","length","some","f","buffer"],"mappings":"2EAAA,gC;AACA,uD;;AAEA,IAAMA,mBAA2B,GAAjC;AACA,IAAMC,sBAA8BD,mBAAmB,IAAnB,GAA0B,IAA9D;;AAEA,IAAME,SAAS,sBAAO;AAClBC,YAAQ;AACJC,kBAAUH,mBADN;AAEJI,eAAO,CAFH,EADU,EAAP,CAAf;;;;AAOA,IAAMC,WAAW,SAAXA,QAAW,CAACC,GAAD,EAAcC,GAAd,EAA2BC,IAA3B,UAA8CP,OAAOQ,GAAP,GAAcH,GAAd,EAAmBC,GAAnB,EAAwB,eAAO;AAC1F,YAAIG,GAAJ,EAAS;AACL,oBAAQA,IAAIC,IAAZ;AACI,qBAAK,iBAAL;AACIJ,wBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sDAA0Cd,gBAA1C,UAArB;AACA;AACJ;AACIQ,wBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,4BAAkBH,IAAII,OAAtB,CAArB,EALR;;AAOH,SARD,MAQO;AACH,gBAAMV,QAAQE,IAAIF,KAAlB;;AAEA,gBAAI,CAACA,KAAD,IAAUA,MAAMW,MAAN,KAAiB,CAA3B,IAAgCX,MAAMY,IAAN,CAAW,qBAAK,CAACC,EAAEC,MAAR,EAAX,CAApC,EAAgE;AAC5DX,oBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,4BAAkB,qDAAlB,CAArB;AACA;AACH;;AAEDL;AACH;AACJ,KAnB8D,CAA9C,EAAjB,C;;AAqBeH,Q","file":"FileUploader.js","sourcesContent":["import multer from 'multer'\nimport ErrorResponse from '../utils/ErrorResponse'\n\nconst MAX_FILE_SIZE_MB: number = 512 \nconst MAX_FILE_SIZE_BYTES: number = MAX_FILE_SIZE_MB * 1024 * 1024\n\nconst upload = multer({\n    limits: {\n        fileSize: MAX_FILE_SIZE_BYTES, \n        files: 1        \n    }\n})\n\nconst uploader = (req: Object, res: Object, next: Function) => upload.any() (req, res, err => {        \n    if (err) {\n        switch (err.code) {\n            case 'LIMIT_FILE_SIZE':\n                res.status(400).json(new ErrorResponse(`File is too large (> ${MAX_FILE_SIZE_MB} Mb)`))    \n                break            \n            default:\n                res.status(500).json(new ErrorResponse(err.message))\n        }        \n    } else {  \n        const files = req.files\n\n        if (!files || files.length === 0 || files.some(f => !f.buffer)) {\n            res.status(400).json(new ErrorResponse('No files are attached or some attachments are empty'))\n            return\n        }         \n\n        next()\n    }\n})\n\nexport default uploader "]}