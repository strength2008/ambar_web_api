{"version":3,"sources":["../../src/services/MandrillProxy.js"],"names":["sendSetPasswordEmail","email","setPasswordKey","setPasswordKeyExpiration","name","mandrillClient","Mandrill","mandrillKey","url","feUrl","encodeURIComponent","setPasswordKeyExpirationFormatted","parseDateTime","format","Promise","resolve","reject","messages","sendTemplate","template_name","template_content","message","from_email","from_name","subject","to","global_merge_vars","content","result","e"],"mappings":"oHAAA,iD;AACA;AACA,mC;;AAEO,IAAMA,sDAAuB,SAAvBA,oBAAuB,CAACC,KAAD,EAAQC,cAAR,EAAwBC,wBAAxB,EAAkDC,IAAlD,EAA2D;AAC3F,QAAMC,iBAAiB,IAAI,mBAASC,QAAb,CAAsB,iBAAOC,WAA7B,CAAvB;AACA,QAAMC,MAAS,iBAAOC,KAAhB,4BAA4CC,mBAAmBT,KAAnB,CAA5C,eAA+ES,mBAAmBR,cAAnB,CAArF;AACA,QAAMS,oCAAoC,uBAAgBC,aAAhB,CAA8BT,wBAA9B,EAAwDU,MAAxD,CAA+D,kBAA/D,CAA1C;;AAEA,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AACfX,2BAAeY,QAAf,CAAwBC,YAAxB;AACI;AACIC,+BAAe,+BADnB;AAEIC,kCAAkB,EAFtB;AAGIC,yBAAS;AACLC,gCAAY,mBADP;AAELC,+BAAW,YAFN;AAGLC,6BAAS,0BAHJ;AAILC,wBAAI;AACA,sBAAExB,OAAOA,KAAT,EADA,CAJC;;AAOLyB,uCAAmB;AACf;AACItB,8BAAM,cADV;AAEIuB,iCAASnB,GAFb,EADe;;AAKf;AACIJ,8BAAM,yBADV;AAEIuB,iCAAShB,iCAFb,EALe;;AASf;AACIP,8BAAM,WADV;AAEIuB,iCAASvB,IAFb,EATe,CAPd,EAHb,EADJ;;;;AA0BO,sBAAUwB,MAAV,EAAkB;AACjBb,wBAAQa,MAAR;AACH,aA5BL,EA4BO,UAAUC,CAAV,EAAa;AACZb,uBAAOa,CAAP;AACH,aA9BL,CADe,GAAZ,CAAP;;AAiCH,CAtCM","file":"MandrillProxy.js","sourcesContent":["import mandrill from 'mandrill-api/mandrill'\nimport { DateTimeService } from './index'\nimport config from '../config'\n\nexport const sendSetPasswordEmail = (email, setPasswordKey, setPasswordKeyExpiration, name) => {\n    const mandrillClient = new mandrill.Mandrill(config.mandrillKey)\n    const url = `${config.feUrl}/set-password?email=${encodeURIComponent(email)}&token=${encodeURIComponent(setPasswordKey)}`\n    const setPasswordKeyExpirationFormatted = DateTimeService.parseDateTime(setPasswordKeyExpiration).format('YYYY-MM-DD HH:mm')\n\n    return new Promise((resolve, reject) =>\n        mandrillClient.messages.sendTemplate(\n            {\n                template_name: \"ambar-cloud-set-your-password\",\n                template_content: {},\n                message: {\n                    from_email: 'hello@ambar.cloud',\n                    from_name: 'Ambar Team',\n                    subject: 'Ambar: Set Your Password',\n                    to: [\n                        { email: email }\n                    ],\n                    global_merge_vars: [\n                        {\n                            name: \"activate_url\",\n                            content: url\n                        },\n                        {\n                            name: \"activate_url_expiration\",\n                            content: setPasswordKeyExpirationFormatted\n                        },\n                        {\n                            name: \"user_name\",\n                            content: name\n                        }\n                    ]\n                }\n            }, function (result) {\n                resolve(result)\n            }, function (e) {\n                reject(e)\n            })\n    )\n}"]}