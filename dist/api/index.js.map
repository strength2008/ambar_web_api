{"version":3,"sources":["../../src/api/index.js"],"names":["config","storage","api","use","get","req","res","next","json","version","mode","auth","preserveOriginals","analytics","token","analyticsToken","integrations","dropbox","dropboxClientId","dropboxRedirectUri","uiLang"],"mappings":"2EAAA;AACA;AACA,gC;AACA,sC;AACA,8B;AACA,kC;AACA,gC;AACA,oC;AACA,kC;AACA,gC;AACA,8B;AACA,sC;AACA,uC;;AAEe,gBAAyB,KAAtBA,MAAsB,QAAtBA,MAAsB,CAAdC,OAAc,QAAdA,OAAc;AACvC,KAAIC,MAAM,sBAAV;;AAEAA,KAAIC,GAAJ,CAAQ,QAAR,EAAkB,qBAAM,EAAEH,cAAF,EAAUC,gBAAV,EAAN,CAAlB;AACAC,KAAIC,GAAJ,CAAQ,WAAR,EAAqB,wBAAS,EAAEH,cAAF,EAAUC,gBAAV,EAAT,CAArB;AACAC,KAAIC,GAAJ,CAAQ,UAAR,EAAoB,uBAAQ,EAAEH,cAAF,EAAUC,gBAAV,EAAR,CAApB;AACAC,KAAIC,GAAJ,CAAQ,OAAR,EAAiB,oBAAK,EAAEH,cAAF,EAAUC,gBAAV,EAAL,CAAjB;AACAC,KAAIC,GAAJ,CAAQ,SAAR,EAAmB,sBAAO,EAAEH,cAAF,EAAUC,gBAAV,EAAP,CAAnB;AACAC,KAAIC,GAAJ,CAAQ,QAAR,EAAkB,qBAAM,EAAEH,cAAF,EAAUC,gBAAV,EAAN,CAAlB;AACAC,KAAIC,GAAJ,CAAQ,SAAR,EAAmB,sBAAO,EAAEH,cAAF,EAAUC,gBAAV,EAAP,CAAnB;AACAC,KAAIC,GAAJ,CAAQ,QAAR,EAAkB,qBAAM,EAAEH,cAAF,EAAUC,gBAAV,EAAN,CAAlB;AACAC,KAAIC,GAAJ,CAAQ,OAAR,EAAiB,oBAAK,EAAEH,cAAF,EAAUC,gBAAV,EAAL,CAAjB;AACAC,KAAIC,GAAJ,CAAQ,WAAR,EAAqB,wBAAS,EAAEH,cAAF,EAAUC,gBAAV,EAAT,CAArB;;AAEAC,KAAIE,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAChCD,MAAIE,IAAJ,CAAS;AACRC,4BADQ;AAERC,SAAMV,OAAOU,IAFL;AAGRC,SAAMX,OAAOW,IAHL;AAIRC,sBAAmBZ,OAAOY,iBAAP,IAA4B,MAA5B,GAAqC,IAArC,GAA4C,KAJvD;AAKRC,cAAW;AACVC,WAAOd,OAAOe,cADJ,EALH;;AAQRC,iBAAc;AACbC,aAAS;AACRC,sBAAiBlB,OAAOkB,eADhB;AAERC,yBAAoBnB,OAAOmB,kBAFnB,EADI,EARN;;;AAcRC,WAAQpB,OAAOoB,MAdP,EAAT;;AAgBA,EAjBD;;AAmBA,QAAOlB,GAAP;AACA,C","file":"index.js","sourcesContent":["import { version } from '../../package.json'\nimport { Router } from 'express'\nimport files from './files'\nimport crawlers from './crawlers'\nimport logs from './logs'\nimport search from './search'\nimport stats from './stats'\nimport sources from './sources'\nimport thumbs from './thumbs'\nimport users from './users'\nimport tags from './tags'\nimport entities from './entities'\nimport { AuthService } from '../services'\n\nexport default ({ config, storage }) => {\n\tlet api = Router()\n\n\tapi.use('/files', files({ config, storage }))\n\tapi.use('/crawlers', crawlers({ config, storage }))\n\tapi.use('/sources', sources({ config, storage }))\n\tapi.use('/logs', logs({ config, storage }))\n\tapi.use('/search', search({ config, storage }))\n\tapi.use('/stats', stats({ config, storage }))\n\tapi.use('/thumbs', thumbs({ config, storage }))\n\tapi.use('/users', users({ config, storage }))\n\tapi.use('/tags', tags({ config, storage }))\n\tapi.use('/entities', entities({ config, storage }))\n\n\tapi.get('/', (req, res, next) => {\n\t\tres.json({\n\t\t\tversion: version,\n\t\t\tmode: config.mode,\n\t\t\tauth: config.auth,\n\t\t\tpreserveOriginals: config.preserveOriginals == \"true\" ? true : false,\n\t\t\tanalytics: {\n\t\t\t\ttoken: config.analyticsToken\n\t\t\t},\n\t\t\tintegrations: {\n\t\t\t\tdropbox: {\n\t\t\t\t\tdropboxClientId: config.dropboxClientId,\n\t\t\t\t\tdropboxRedirectUri: config.dropboxRedirectUri\n\t\t\t\t}\n\t\t\t},\n\t\t\tuiLang: config.uiLang\n\t\t})\n\t})\n\n\treturn api\n}\n"]}